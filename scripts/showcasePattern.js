// BluePrints
const beaconBluePrint = `
xx..
x...
...x
..xx
`;

const beaconPattern = blueprintConvertor(beaconBluePrint, 2, 2, 15);

const gliderBlueprint = `
.x.
..x
xxx
`;

const gliderPattern = blueprintConvertor(gliderBlueprint, 2, 2, 15);

const lightSpaceshipBlueprint = `
x..x.
....x
x...x
.xxxx
`;
const lightSpaceshipPattern = blueprintConvertor(
    lightSpaceshipBlueprint,
    0,
    20,
    15
);

const pulsarBlueprint = `
..xxx...xxx
.............
x....x.x....x
x....x.x....x
x....x.x....x
..xxx...xxx..
.............
..xxx...xxx..
x....x.x....x
x....x.x....x
x....x.x....x
.............
..xxx...xxx..
`;

const pulsarPattern = blueprintConvertor(pulsarBlueprint, 2, 2, 15);

const pentadecathlonBlueprint = `
..x....x
xx.xxxx.xx
..x....x
`;

const pentadecathlonPattern = blueprintConvertor(
    pentadecathlonBlueprint,
    5,
    10,
    15
);

const gliderProduceEngineBlueprint = `
.O
.O
.O
.....O
.OOO..O
O....O
O...O
.OOO
...............OO
.............OO..O
O.O..........OO...O
O.O..........OO
O.O
O.O.................O
.OO..............O
..............
..............
......................O..O
..........................O
......................O..........OO
..........................O......OO
......................OOOO
.....................O
......................OO
.......................O
..............
..............
.........................................OO
.........................................OO
..............
..............
.............OO
.............OO
..............
..............
..............
..............
....................................OO
....................................OOO.........OO
.....................................O..........O.O
.................................................O
.................................O
...........................O.....O
..........................O.O...........OOO
..........................O..O.........O.OO
................OO.........OO..........OO
...............O..O
...............OO.OO
..................O.O
....................OO
.................O...O
.................O..O............................................OO
..................OOO............................................OO
..............
..............
......................................................O
.....................................................O.O
........................................O............OO
.......................................O.O
.......................................OO
`;

const gliderProduceEnginePattern = blueprintConvertor(
    gliderProduceEngineBlueprint,
    5,
    50,
    5
);

const gosperGiderGunBlueprint = `
........................x
......................x.x
............xx......xx............xx
...........x...x....xx............xx
xx........x.....x...xx
xx........x...x.xx....x.x
..........x.....x.......x
...........x...x
............xx
`;

const gosperGiderGunPattern = blueprintConvertor(
    gosperGiderGunBlueprint,
    3,
    10,
    7
);

const stripDrawerBlueprint = `
........xx
.......xx.
.........x
...........xx
..........x
.............
.........x..xx
.xx.....xx....x
xx.....x.....x
..x....x.x...xx
....x..x....xx.x
....xx.......xx
........x....x.xx
.......x.x..x.xx
........x.......
`;

const stripDrawerPattern = blueprintConvertor(stripDrawerBlueprint, 40, 60, 5);

const lifeLexiconBlueprint = `
....xx......xx
...x.x......x.x
...x..........x
xx.x..........x.xx
xx.x.x..xx..x.x.xx
...x.x.x..x.x.x...
...x.x.x..x.x.x...
xx.x.x..xx..x.x.xx
xx.x..........x.xx
...x..........x
...x.x......x.x
....xx......xx
`;

const lifeLexiconPattern = blueprintConvertor(lifeLexiconBlueprint, 2, 10, 10);

const twirlingTwoBlueprint = `
.......OO...OO
......O.......O
.........O.O
.......OO...OO
..............
..............
..............
.....................OOO
....................OOO
.............O
OOO.........OOO
.OOO
....................OOO
.....................OOO
..............
.OOO
OOO.........OOO
.............O
..............
..............
..........OO...OO
............O.O
.........O.......O
..........OO...OO
`;

const twirlingTwoPattern = blueprintConvertor(twirlingTwoBlueprint, 2, 10, 10);

const twinBeesShuttleBlueprint = `
.................OO
OO...............O.O.......OO
OO.................O.......OO
.................OOO
................
................
................
.................OOO
OO.................O
OO...............O.O
.................OO
`;

const twinBeesShuttlePattern = blueprintConvertor(
    twinBeesShuttleBlueprint,
    2,
    15,
    8
);

const twinBeesShuttlePairBlueprint = `
.................O...............................
OO...............OO..............................
OO................OO.............................
.................OO...........OO.................
.............................O.O.................
.............................O...................
.............................OOO.................
.................OO..............................
..................OO.............................
.................OO..............................
.................O...........OOO.................
.............................O.................OO
.............................O.O...............OO
..............................OO.................
`;

const twinBeesShuttlePairPattern = blueprintConvertor(
    twinBeesShuttlePairBlueprint,
    4,
    20,
    5
);

const p156Blueprint = `
....................OO....................
....................OO....................
..........................................
..........................................
..........................................
........OO......................OO........
.........O............OO........O.........
.........O.O..........O.......O.O.........
.....O....OO..........O.......OO....O.....
.....OOO...............O..........OOO.....
........O........................O........
.......OO........................OO.......
..........................................
..........................................
..........................................
..........................................
..........................................
..........................................
................................O..O......
.................................OOO......
OO......................................OO
OO......................................OO
......OOO.................................
......O..O................................
..........................................
..........................................
..........................................
..........................................
..........................................
..........................................
.......OO........................OO.......
........O........................O........
.....OOO..........O...............OOO.....
.....O....OO.......O..........OO....O.....
.........O.O.......O..........O.O.........
.........O........OO............O.........
........OO......................OO........
..........................................
..........................................
..........................................
....................OO....................
....................OO....................
`;

const p156Pattern = blueprintConvertor(p156Blueprint, 3, 4, 6);

const p16Blueprint = `
.......OO
.......O.O
..O....O.OO
.OO.....O
O..O
OOO
.......
..........OOO
.........O..O
....O.....OO
..OO.O....O
...O.O
....OO
`;

const p16Pattern = blueprintConvertor(p16Blueprint, 4, 5, 15);

const p144Blueprint = `
OO........................OO
OO........................OO
..................OO
.................O..O
..................OO
..............O
.............O.O
............O...O
............O..O
....................
............O..O
...........O...O
............O.O
.............O
........OO
.......O..O
........OO
OO........................OO
OO........................OO
`;

const p144Pattern = blueprintConvertor(p144Blueprint, 2, 8, 10);

const b52bomberBlueprint = `
.OO
.OO.................O
...................O.O............O.O
....................O............O
OO.......OO.......................O..O
OO.O.....OO.......................O.O.O
...O.......................O.......O..O
...O.......................OO.......OO
O..O.................OO.....O
.OO..................O
.....................OOO
....................................OO
....................................OO
.OO
O..O
O.O.O................O.O....OO.....OO
.O..O.................OO....OO.....OO.O
.....O............O...O...............O
..O.O............O.O..................O
..................O................O..O
....................................OO
`;

const b52bomberPattern = blueprintConvertor(b52bomberBlueprint, 2, 8, 7);

const p51Blueprint = `
...OO.....................OO...
...OO.....................OO...
...............................
OO...........................OO
OO.....O..OOO.....OOO..O.....OO
......OOO.OOO.....OOO.OOO......
.....O..O.............O..O.....
....OO...................OO....
.....OO.................OO.....
...............................
....OO...................OO....
....OO...................OO....
....OO...................OO....
...............................
...............................
...............................
...............................
...............................
....OO...................OO....
....OO...................OO....
....OO...................OO....
...............................
.....OO.................OO.....
....OO...................OO....
.....O..O.............O..O.....
......OOO.OOO.....OOO.OOO......
OO.....O..OOO.....OOO..O.....OO
OO...........................OO
...............................
...OO.....................OO...
...OO.....................OO...
`;

const p51Pattern = blueprintConvertor(p51Blueprint, 6, 8, 6);

const biBlockPufferBlueprint = `
...........O.O.............................................
..........O..O.............................................
.........OO.......O....OOOOOO..............................
........O......OO.O....O.....O.............................
.......OOOOOO..O.......O...................................
....OO.......O...OOOO...O....O.............................
...O...OOO.O....O.........OO...............................
..O...O...OO.O..OO.O..O....................................
..O.....OO...O.....O...O.O.................................
..OOO...OOOO.O.......O....O................................
...........O.........O....O.....O..........................
..OOO......O.O.......OO..OO......O.........................
.O.....O.....O.........OO......OOO...OO..OO..OO..OO..OO..OO
O...OO.O...OO........................OO..OO..OO..OO..OO..OO
O...O......OOO.............................................
O...OO.O...OO........................OO..OO..OO..OO..OO..OO
.O.....O.....O.........OO......OOO...OO..OO..OO..OO..OO..OO
..OOO......O.O.......OO..OO......O.........................
...........O.........O....O.....O..........................
..OOO...OOOO.O.......O....O................................
..O.....OO...O.....O...O.O.................................
..O...O...OO.O..OO.O..O....................................
...O...OOO.O....O.........OO...............................
....OO.......O...OOOO...O....O.............................
.......OOOOOO..O.......O...................................
........O......OO.O....O.....O.............................
.........OO.......O....OOOOOO..............................
..........O..O.............................................
...........O.O.............................................
`;

const biBlockPufferPattern = blueprintConvertor(
    biBlockPufferBlueprint,
    10,
    15,
    4
);

const edgeShooterBlueprint = `
OO............OO..O....OO..OO.............
OO............O.OO......OO.OO.............
...............O......O.O.................
...............OOO....OO..................
..........................................
...............OOO....OO..................
...............O......O.O.................
OO............O.OO......OO................
OO............OO..O....OO.................
..........................................
..........................................
..........................................
..........................................
..........................................
..........................................
...............................OOO...OOO..
..............................O...O.O...O.
.............................O...OO.OO...O
.............................O.OO.....OO.O
...............................O.......O..
..........................................
..........................................
..........................................
..........................................
..........................................
..........................................
..........................................
..........................................
..........................................
..........................................
...............................OO.....OO..
...............................OO.....OO..
`;

const edgeShooterPattern = blueprintConvertor(edgeShooterBlueprint, 7, 8, 5);

const electricFenceBlueprint = `
..........O..................................................
.........O.O........................OO.......................
..O....OOO.O.....O...................O...O..O......O.....OO..
.O.O..O....OO...O.O..................O.OOO..OOO...O.O....O...
.O.O..O.OO.......O....................O...OO...O.O..O......O.
OO.OO.O.O.OOOOO.....O..................OO...O..O.O.OO.OO..OO.
.O.O..O...O..O..O.......OO...OO...OO....OO.OO..O.O..O.O.O....
.O..OO....OO......OOO.OO...OO...OO...OOO.....OOOO.OOO.O...OO.
..O..OOO..O..O.OOOO...OO...OO...OO...OOO.OO..O....O.O....O..O
...OO...O.O..O.....OO...OO...OO...OO......O............O...OO
.....OO.O.OO.O.OO..O......................O........OO.O......
.....O.OO.O..O.OO....O.................OO.O.O................
...........OO.......OO..................O..OO................
......................................O.O....................
......................................OO.....................
`;

const electricFencePattern = blueprintConvertor(
    electricFenceBlueprint,
    2,
    20,
    4
);

const flyBlueprint = `
..O
.O.O
.O.O......................O.O...O
.O.......................OO.O.O..O
...........OOO........O.........O
OO.........OO..O.OO...O..OOOO
.O.O.........OOOO..O.O..OO....OO
.OO........O..O...OOO.....OOO
..O.......O....O..OO..OO..O..O
...O..O...O....O..OOO.O.O....OO
.......O.OO....O..OOOO.....O
....OO...OO....O..OOOO.....O
....O.O...O....O..OOO.O.O....OO
...OO.....O....O..OO..OO..O..O
....O.O....O..O...OOO.....OOO
.....O.......OOOO..O.O..OO....OO
...........OO..O.OO...O..OOOO
...........OOO........O.........O
.........................OO.O.O..O
..........................O.O...O
`;

const flyPattern = blueprintConvertor(flyBlueprint, 2, 8, 8);

const fuseBlueprint = `
.........OO......................OO......................
.........OO......................OO......................
.........................................................
.........................................................
.....OO.......OO.............OO.......OO.............OO..
.OO..OO.......OO.........OO..OO.......OO.........OO..OO..
.OO................OO....OO................OO....OO......
...................OO......................OO............
.........................................................
.........................................................
.........................................................
.........................................................
............OO....OO................OO....OO.............
............OO....OO................OO....OO.............
.........................................................
.........................................................
.........................................................
.........................................................
.........................................................
.........................................................
.........................................................
.........................................................
.........................................................
OO....OO................OO....OO................OO....OO.
OO....OO................OO....OO................OO....OO.
.........................................................
.........................................................
.........................................................
.........................................................
.OO....OO......................OO......................OO
O.O....OO....OO................OO....OO................OO
..O..........OO..OO.......OO.........OO..OO.......OO.....
.................OO.......OO.............OO.......OO.....
.........................................................
.........................................................
.....................OO......................OO..........
.....................OO......................OO..........
`;

const fusePattern = blueprintConvertor(fuseBlueprint, 3, 8, 4);

const showcasePatternList = {
    beaconPattern,
    gliderPattern,
    lightSpaceshipPattern,
    pulsarPattern,
    pentadecathlonPattern,
    gliderProduceEnginePattern,
    gosperGiderGunPattern,
    stripDrawerPattern,
    lifeLexiconPattern,
    twirlingTwoPattern,
    twinBeesShuttlePattern,
    twinBeesShuttlePairPattern,
    p156Pattern,
    p16Pattern,
    p144Pattern,
    b52bomberPattern,
    p51Pattern,
    biBlockPufferPattern,
    edgeShooterPattern,
    electricFencePattern,
    flyPattern,
    fusePattern,
};

function blueprintConvertor(
    blueprint,
    translateX = 0,
    translateY = 0,
    cellsize = 10
) {
    let arrays = blueprint
        .split("\n")
        .map((line) => (line === "" ? "." : line))
        .flatMap((row, yPos) => {
            return row.split("").flatMap((char, xPos) => {
                return char !== "." ? [[xPos, yPos]] : [];
            });
        });
    // let arrays = blueprint
    //     .split("\n")
    //     .filter((line) => line !== "")
    //     .flatMap((row, yPos) => {
    //         return row.split("").flatMap((char, xPos) => {
    //             return char !== "." ? [[xPos, yPos]] : [];
    //         });
    //     });

    // translate base on Input
    let translatedArray = arrays.map((arr, i) => {
        return [arr[0] + translateX, arr[1] + translateY];
    });

    let obj = {
        pattern: arrays,
        cellsize,
    };

    return obj;
}
